{"version":3,"sources":["components/misc/ProjectText.tsx","components/Navbar/Navbar.tsx","components/misc/GitHubStats.tsx","components/LandingPage/LandingPage.tsx","components/Project/Project.tsx","components/ContactForm/ContactForm.tsx","components/Footer/Footer.tsx","components/Dark/Dark.tsx","components/App/App.tsx","index.tsx"],"names":["ProjectText","name","src","alt","description","implementation","github","docs","website","Navbar","navRef","useRef","prevY","window","scrollY","useEffect","hideOrShowNav","e","offset","currentTarget","current","style","transition","opacity","toString","addEventListener","removeEventListener","className","id","ref","href","target","rel","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-labelledby","map","x","i","length","Math","random","STATS","class","LandingPage","LINKS","url","text","icon","size","color","resumeRef","useState","resume","setResume","process","Button","variant","onClick","open","resumeBtn","width","height","left","handleResumeClick","title","Array","fill","_","Project","props","MAX_DESC_LENGTH","seeMore","setSeeMore","children","substr","item","urls","variant_type","btn_text","push","ButtonType","ContactForm","sent","setSent","email","setEmail","resetBtn","a","preventDefault","formData","FormData","axios","post","click","Form","onSubmit","Group","controlId","Label","Control","placeholder","required","onFocus","value","onChange","Text","pattern","as","rows","cols","Check","label","Footer","Date","getFullYear","Dark","dark","setDark","document","querySelector","checked","body","background","getElementById","border","querySelectorAll","forEach","htmlFor","App","Fragment","youtube","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.111d903d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport interface IProject {\r\n  name: string;\r\n  src: string;\r\n  alt: string;\r\n  description: JSX.Element;\r\n  implementation: string[];\r\n  youtube?: string;\r\n  github?: string;\r\n  docs?: string;\r\n  website?: string;\r\n}\r\n\r\nconst ProjectText: IProject[] = [\r\n  {\r\n    name: \"TabMerger\",\r\n    src: \"/images/tabmerger.gif\",\r\n    alt: \"Quick demo of TabMerger showing what a sample use case is like\",\r\n    description: (\r\n      <span>\r\n        TabMerger, as the name suggests, merges your tabs into one location to save memory usage and increase your\r\n        productivity. TabMerger is a cross-browser extension - currently available on Chrome, Firefox, and Edge. Tired\r\n        of searching through squished tab icons to find that one tab you are sure is there? With TabMerger you can\r\n        simplify this clutter while greatly increasing productivity in a highly organized and customizable fashion! A\r\n        single click is all it takes to merge your tabs into a single place, where you can then re-arrange them into\r\n        appropriate groups, delete extra/unwanted tabs, customize group colors, and so much more. All tabs that are\r\n        merged into TabMerger are stored internally for you to use at a later time, even when you close the browser\r\n        window. Lots of analytics are provided to keep you informed about the state of your tabs.\r\n      </span>\r\n    ),\r\n    implementation: [\r\n      \"HTML5, CSS3, Bootstrap4, JS/TS & React\",\r\n      \"Markdown & YAML → Documentation & Templates for Issues/Pull Requests\",\r\n      \"jsDoc & typeDoc → Codebase Documentation\",\r\n      \"Jest → Unit Testing\",\r\n      \"CI/CD → GitHub Actions\",\r\n      \"Git → Version Control\",\r\n      \"Chrome API → Extension Control\",\r\n    ],\r\n    github: \"https://github.com/lbragile/TabMerger\",\r\n    docs: \"https://lbragile.github.io/TabMerger/\",\r\n    website: \"https://lbragile.github.io/TabMerger-Extension/\",\r\n  },\r\n  {\r\n    name: \"chessCAMO\",\r\n    src: \"/images/gui.gif\",\r\n    alt: \"Graphical User Interface illustration for the final product\",\r\n    description: (\r\n      <span>\r\n        chessCAMO is a newly proposed chess engine with a built-in variant that stands for Calculations Always Make\r\n        Opportunities and was inspired by the very popular chess variant Crazyhouse. The &quot;CAMO&quot; portion comes\r\n        from the idea that in this variant, at any turn, a player can sacrifice making a move to replace one of their\r\n        pieces with a piece from the &quot;piece reservoir&quot;. This has the affect of camouflaging each piece that is\r\n        on the board. As a result, very unique gameplay can be observed as now a king cannot simply castle to safety and\r\n        then be surrounded by friendly pieces like in CrazyHouse. Instead, each peace on the board can be used as a\r\n        temporary placeholder that is eyeing a specific square/path which can be replaced at any moment. An added\r\n        difficult is the fact that the peice reservoir is limited and non-refillable. Thus, each player must budget\r\n        their peice substitution well in advance in order to be successful. This differs from CrazyHouse where you could\r\n        refill your inventory by capturing an opponents peice.\r\n      </span>\r\n    ),\r\n    implementation: [\r\n      \"C++, Makefile, YAML\",\r\n      \"Markdown → Documentation\",\r\n      \"Git → Version Control\",\r\n      \"GTest → Unit Testing\",\r\n      \"CI/CD → GitHub Actions\",\r\n      \"SFML → Graphical User Interface\",\r\n    ],\r\n    github: \"https://github.com/lbragile/chessCAMO\",\r\n    docs: \"https://lbragile.github.io/chessCAMO/\",\r\n  },\r\n  {\r\n    name: \"SimplifyCOVID\",\r\n    src: \"/images/covid.gif\",\r\n    alt: \"Illustration of how to use the covid19 statistics site\",\r\n    description: (\r\n      <span>\r\n        This is an interactive map with worldwide COVID-19 global statistics updated at regular intervals using upto\r\n        date dataset API calls. Main features include, global statistics, country hover analysis, continent selection,\r\n        on-click graphs, and detailed tables. The core principle of the simpleglobalstats brand is simplicity which is\r\n        why it is kept simple and elegant to provide the user with all the necessary information at their finger tips.\r\n        The user can simply press on a country to see all the relevant statistics presented in the headers above.\r\n        Additionally, charts are provided corresponding to the clicked country. There are settings that filter specific\r\n        continents, statistics, hide/show country names, and filter the data table below. Lastly, the generated charts\r\n        are interactive as well.\r\n      </span>\r\n    ),\r\n    implementation: [\r\n      \"HTML5, CSS3, JS\",\r\n      \"jQuery → Simpler JS queries\",\r\n      \"AJAX → API Communication\",\r\n      \"Git → Version Control\",\r\n    ],\r\n    website: \"https://www.simpleglobalstats.com/\",\r\n  },\r\n  {\r\n    name: \"LoginPlay\",\r\n    src: \"/images/login.gif\",\r\n    alt: \"Demonstration of the server client communication\",\r\n    description: (\r\n      <span>\r\n        A client-server communication system. The logic of the tic-tac-toe game is not relevant to this project, but\r\n        rather the overall functionality of the system is what counts. A database is integrated through NodeJS and MySQL\r\n        (phpMyAdmin) which uses password encryption for security, email verification upon registration is made, JSON web\r\n        tokens and cookies are used to verify users and maintain smooth status transitions over many tabs, sockets are\r\n        used for multi-client communication through a central server, templating is used for simple markup error\r\n        handling and code reuse.\r\n      </span>\r\n    ),\r\n    implementation: [\r\n      \"HTML5, CSS3, JS\",\r\n      \"NodeJS, ExpressJS, Socket.io → Client/Server Communication\",\r\n      \"EJS Templates → Error handling\",\r\n      \"MySQL → Login validation\",\r\n      \"Nodemailer → Email verification\",\r\n      \"Git → Version Control\",\r\n    ],\r\n    github: \"https://github.com/lbragile/LogInPlay\",\r\n  },\r\n  {\r\n    name: \"ChatIn\",\r\n    src: \"/images/chat.gif\",\r\n    alt: \"Chatting with admin through a custom made chat system with login system\",\r\n    description: (\r\n      <span>\r\n        A chat system with an admin and users that communicate with the admin. The admin has a special namespace where\r\n        they can see all active users that want to chat as well as &quot;tabs&quot; where the communication with unique\r\n        users happens. A MongoDB database is used to persist the messages in each chat room in case of a\r\n        reload/disconnect event. The chat menu shows your username, all the messages you sent, and the responses you\r\n        obtained (from the admin). Incoming and outgoing messages are also timestamped to provide more detailed\r\n        statistics to both parties. The admin can see which users are logged in through a special administrator access\r\n        only window.\r\n      </span>\r\n    ),\r\n    implementation: [\r\n      \"HTML5, CSS3, Bootstrap4, JS\",\r\n      \"NodeJS, ExpressJS, Socket.io → Client/Server Communication\",\r\n      \"MongoDB (Mongoose) → Database\",\r\n      \"MVC Design Pattern\",\r\n      \"Git → Version Control\",\r\n    ],\r\n    github: \"https://github.com/lbragile/ChatIn\",\r\n  },\r\n  {\r\n    name: \"Portfolio\",\r\n    src: \"/images/portfolio.gif\",\r\n    alt: \"A walkthrough my full stack developer portfolio website\",\r\n    description: (\r\n      <span>\r\n        This website highlights my full stack development projects and provides a means for interested guests to\r\n        contact/connect with me. I designed my own server (as usual) and used ReactJS to create the user interface. The\r\n        front end communicates with the server (backend) via API calls with Axios Nodemailer is used to allow users to\r\n        connect with me (through the contact form) by sending an email to my adress with the relevant information. As\r\n        always, when dealing with sensitive information, environment variables are implemented, rather than\r\n        &quot;hard-coding&quot; the values in the public script.\r\n      </span>\r\n    ),\r\n    implementation: [\r\n      \"HTML5, CSS3, Bootstrap4, JS/TS\",\r\n      \"React & JSX → User Interface\",\r\n      \"NodeJS, ExpressJS, Socket.io → Client/Server Communication\",\r\n      \"Git → Version Control\",\r\n    ],\r\n    github: \"https://github.com/lbragile/Portfolio\",\r\n  },\r\n];\r\n\r\nexport default ProjectText;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nimport ProjectText from \"../misc/ProjectText\";\r\n\r\nexport interface IEventTarget extends EventTarget {\r\n  scrollY: number;\r\n}\r\n\r\nexport default function Navbar(): JSX.Element {\r\n  const navRef = useRef<HTMLDivElement>(null);\r\n  const prevY = useRef<number>(window.scrollY);\r\n\r\n  useEffect(() => {\r\n    function hideOrShowNav(e: Event) {\r\n      const offset = (e?.currentTarget as IEventTarget).scrollY;\r\n      if (navRef.current) {\r\n        navRef.current.style.transition = \"all 1s\";\r\n        navRef.current.style.opacity = (+(prevY.current > offset)).toString();\r\n      }\r\n      prevY.current = offset;\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", (e) => hideOrShowNav(e));\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", (e) => hideOrShowNav(e));\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light sticky-top mb-3\" id=\"navbar-section\" ref={navRef}>\r\n      <a className=\"navbar-brand\" href=\"https://github.com/lbragile/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        lbragile\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav ml-auto text-right\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#about-section\">\r\n              About <span className=\"sr-only\">(current)</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"/#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\">\r\n              Projects\r\n            </a>\r\n            <div className=\"dropdown-menu text-center\" aria-labelledby=\"navbarDropdown\">\r\n              {ProjectText.map((x: { name: string }, i) => {\r\n                return (\r\n                  <span key={Math.random()}>\r\n                    {i === ProjectText.length - 1 ? <div className=\"dropdown-divider\"></div> : null}\r\n                    <a className=\"dropdown-item\" href={\"#\" + x.name}>\r\n                      {x.name}\r\n                    </a>\r\n                  </span>\r\n                );\r\n              })}\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#contact-section\">\r\n              Contact\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","export interface IStats {\r\n  class: string;\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\nconst STATS: IStats[] = [\r\n  {\r\n    class: \"github-stats mr-2\",\r\n    src:\r\n      \"https://camo.githubusercontent.com/292dee8299f2ad8e33b6eb9c2dfddeeb118c096af5e60d1f8b1d0d29ed0061c7/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d6c62726167696c6526636f756e745f707269766174653d747275652673686f775f69636f6e733d7472756526637573746f6d5f7469746c653d4c696f72277325323047697448756225323053746174697374696373267468656d653d6461726b267469746c655f636f6c6f723d66666666666626746578745f636f6c6f723d6339636163632669636f6e5f636f6c6f723d3262626338612662675f636f6c6f723d316431663231266c696e655f6865696768743d3237\",\r\n    alt: \"GitHub Statistics\",\r\n  },\r\n  {\r\n    class: \"top-lang\",\r\n    src:\r\n      \"https://camo.githubusercontent.com/b416be1960b979a0b8899539ccd77ab7aea8d9b90001e0fd92d2d774d035a262/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f746f702d6c616e67732f3f757365726e616d653d6c62726167696c65266c616e67735f636f756e743d33266578636c7564655f7265706f3d636865737343414d4f26637573746f6d5f7469746c653d4c696f722773253230546f702532304c616e677561676573267468656d653d6461726b267469746c655f636f6c6f723d66666666666626746578745f636f6c6f723d6339636163632669636f6e5f636f6c6f723d3262626338612662675f636f6c6f723d31643166323126636172645f77696474683d333035\",\r\n    alt: \"Top Languages\",\r\n  },\r\n];\r\n\r\nexport default STATS;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { FaAngleDoubleDown } from \"react-icons/fa\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FaReddit, FaStackOverflow } from \"react-icons/fa\";\r\nimport { AiFillLinkedin, AiFillGithub } from \"react-icons/ai\";\r\n\r\nimport STATS, { IStats } from \"../misc/GitHubStats\";\r\nimport \"./LandingPage.css\";\r\n\r\nexport interface ILinks {\r\n  url: string;\r\n  text: string;\r\n  icon: JSX.Element;\r\n}\r\n\r\nexport default function LandingPage(): JSX.Element {\r\n  const LINKS = useRef<Array<ILinks>>([\r\n    { url: \"https://github.com/lbragile/\", text: \"GitHub\", icon: <AiFillGithub size=\"1.4rem\" color=\"black\" /> }, // prettier-ignore\r\n    { url: \"https://www.linkedin.com/in/liorbragilevsky/\", text: \"LinkedIn\", icon: <AiFillLinkedin size=\"1.4rem\" color=\"black\" /> }, // prettier-ignore\r\n    { url: \"https://stackoverflow.com/users/4298115/lbragile\", text: \"StackOverflow\", icon: <FaStackOverflow size=\"1.4rem\" color=\"black\" /> }, // prettier-ignore\r\n    { url: \"https://www.reddit.com/user/lbragile_dev\", text: \"Reddit\", icon: <FaReddit size=\"1.4rem\" color=\"black\" /> }, // prettier-ignore\r\n  ]);\r\n  const resumeRef = useRef<HTMLDivElement>(null);\r\n  const [resume, setResume] = useState<boolean>(false);\r\n\r\n  function handleResumeClick() {\r\n    const resumeBtn = resumeRef.current;\r\n    if (resumeBtn) {\r\n      resumeBtn.style.opacity = (+!resume).toString();\r\n      resumeBtn.style.width = resume ? \"0\" : \"auto\";\r\n      resumeBtn.style.height = resume ? \"0\" : \"auto\";\r\n      resumeBtn.style.left = resume ? \"-1000px\" : \"0\";\r\n\r\n      resumeBtn.style.transition = \"opacity 1s\";\r\n      resumeBtn.style.transition = \"left 1s\";\r\n\r\n      setResume(!resume);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" id=\"landingpage-section\">\r\n      <div className=\"row mt-4 mb-5 d-flex align-items-center\">\r\n        <div className=\"col-sm-2\">\r\n          <img src={process.env.PUBLIC_URL + \"/images/portrait.png\"} alt=\"My portrait\" id=\"portrait\" />\r\n        </div>\r\n        <div className=\"col-sm-10\">\r\n          {/* <img src=\"./images/header.png\" alt=\"My name name & expertise\" id=\"header-title\" /> */}\r\n          <p className=\"header-title top-title\">Lior Bragilevsky</p>\r\n          <p className=\"header-title bottom-title\">Full Stack Developer & DevOps Engineer</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\" id=\"about-section\">\r\n          <h2>\r\n            Hey there! <img src=\"https://i.imgur.com/L1NxDZ2.gif\" alt=\"waving hand\" className=\"waving-hand\" />\r\n          </h2>\r\n          <p className=\"text-justify\">\r\n            My name is Lior Bragilevsky and I am a self taught Full Stack Developer & DevOps Engineer that is always up\r\n            to the challenge. I have firm goals to learn new things daily. My daily routine revolves around full stack\r\n            projects that are of interest to me/for clients, play logical games like chess, workout, and hang out with\r\n            friends.\r\n          </p>\r\n          <p className=\"text-justify\">\r\n            I graduated with a MASc (Accelerated Program - First Class with Distinction) from Simon Fraser University in\r\n            April 2020. This comes after completing my BASc (Honours with Distinction) in Engineering, again, at SFU in\r\n            August 2018. During this time, I worked on a variety of machine learning projects and enhanced my coding\r\n            skills both in a team and individual setting. Ever since, I haven&apos;t looked back and am a proud author\r\n            of many open source projects.\r\n          </p>\r\n\r\n          <p className=\"text-justify\">\r\n            I think it is very important to maintain a social media presence as that is where you can ask questions from\r\n            more experienced users, connect & network with other developers, or even just help out others who are stuck\r\n            on a step that you figured out a while ago. Feel free to reach out to me at any of the following social\r\n            media platforms.\r\n            <span className=\"d-flex justify-content-center row my-4\">\r\n              {LINKS.current.map(\r\n                (x: ILinks, i): JSX.Element => {\r\n                  return (\r\n                    <Button\r\n                      variant=\"light\"\r\n                      className={i > 0 ? \"ml-1\" : \"\"}\r\n                      onClick={() => window.open(x.url, \"_blank\")}\r\n                      key={Math.random()}\r\n                    >\r\n                      {x.icon}\r\n                    </Button>\r\n                  );\r\n                }\r\n              )}\r\n            </span>\r\n          </p>\r\n\r\n          <div className=\"text-center\">\r\n            <Button className=\"mb-2 font-weight-bold\" variant=\"primary\" onClick={() => handleResumeClick()}>\r\n              {resume ? \"🙈 Resume\" : \"🙉 Resume\"}\r\n            </Button>\r\n            <div id=\"resume-frame\" ref={resumeRef}>\r\n              <iframe\r\n                src={process.env.PUBLIC_URL + \"/other/resume.pdf\"}\r\n                title=\"Preview Resume\"\r\n                className=\"preview-resume\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-6\">\r\n          <h2>\r\n            Tools{\" \"}\r\n            <span role=\"img\" aria-label=\"wrench indicating building\">\r\n              🔧\r\n            </span>\r\n          </h2>\r\n          <div className=\"badge-icons\">\r\n            {Array(15)\r\n              .fill(0)\r\n              .map((_, i) => {\r\n                return (\r\n                  <img\r\n                    src={process.env.PUBLIC_URL + \"/images/badges/tech\" + (i + 1) + \".svg\"}\r\n                    alt=\"tech badge\"\r\n                    key={Math.random()}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n\r\n          <h2>\r\n            Stats{\" \"}\r\n            <span role=\"img\" aria-label=\"wrench indicating building\">\r\n              📈\r\n            </span>\r\n          </h2>\r\n          <div className=\"about-img text-center d-flex flex-wrap justify-content-justify-content-between\">\r\n            {STATS.map(\r\n              (x: IStats): JSX.Element => {\r\n                return <img className={x.class + \" my-1\"} src={x.src} alt={x.alt} key={Math.random()} />;\r\n              }\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <a href=\"#project-section\">\r\n        <FaAngleDoubleDown className=\"scroll-down-hint\" />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { IProject } from \"../misc/ProjectText\";\r\nimport \"./Project.css\";\r\n\r\nexport default function Project(props: IProject): JSX.Element {\r\n  const MAX_DESC_LENGTH = useRef(400);\r\n\r\n  const [seeMore, setSeeMore] = useState(false);\r\n\r\n  function ButtonType(): JSX.Element[] {\r\n    const urls: string[] = [], variant_type: string[] = [], btn_text: string[] = []; // prettier-ignore\r\n    if (props.github) {\r\n      urls.push(props.github);\r\n      variant_type.push(\"primary\");\r\n      btn_text.push(\"GitHub\");\r\n    }\r\n    if (props.docs) {\r\n      urls.push(props.docs);\r\n      variant_type.push(\"secondary\");\r\n      btn_text.push(\"Documentation\");\r\n    }\r\n    if (props.website) {\r\n      urls.push(props.website);\r\n      variant_type.push(\"info\");\r\n      btn_text.push(\"Visit Site\");\r\n    }\r\n\r\n    return variant_type.map(\r\n      (x: string, i): JSX.Element => {\r\n        return (\r\n          <a href={urls[i]} target=\"_blank\" rel=\"noopener noreferrer\" key={Math.random()}>\r\n            <Button variant={x} className=\"mr-2\">\r\n              {btn_text[i]}\r\n            </Button>\r\n          </a>\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container text-white anchor-top my-4\" id={props.name}>\r\n      <div className=\"card\">\r\n        <h3 className=\"card-header text-center\">{props.name}</h3>\r\n        <div className=\"card-body text-center row\">\r\n          <div className=\"container-img my-auto\">\r\n            <img src={process.env.PUBLIC_URL + props.src} alt={props.alt} className=\"card-img-left rounded\" />\r\n          </div>\r\n\r\n          <div className=\"desc my-auto\">\r\n            <h4 className=\"card-title mb-2\">\r\n              <b>Description</b>\r\n            </h4>\r\n            <div className=\"card-text text-justify px-3\">\r\n              {props.description.props.children.length > MAX_DESC_LENGTH.current && !seeMore\r\n                ? props.description.props.children.substr(0, MAX_DESC_LENGTH.current) + \"...\"\r\n                : props.description.props.children}\r\n              <span className=\"see-more-or-less\" onClick={() => setSeeMore(!seeMore)}>\r\n                {seeMore ? \" See Less\" : \" See More\"}\r\n              </span>\r\n            </div>\r\n\r\n            <h4 className=\"card-title mt-3 mb-2\">\r\n              <b>Implementation</b>\r\n            </h4>\r\n            <ul className=\"list-group list-group-flush text-left mb-2 px-3\">\r\n              {props.implementation.map((item: string) => {\r\n                return (\r\n                  <li className=\"list-group-item\" key={Math.random()}>\r\n                    {item}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer text-center link-buttons\">{ButtonType()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport \"./ContactForm.css\";\r\n\r\nexport default function ContactForm(): JSX.Element {\r\n  const [sent, setSent] = useState<boolean>(false);\r\n  const [email, setEmail] = useState<string>(\"\");\r\n\r\n  const resetBtn = useRef<HTMLButtonElement>(null);\r\n\r\n  async function handleSubmit(e: React.FormEvent): Promise<void> {\r\n    e.preventDefault();\r\n    const formData: FormData = new FormData(e.target as HTMLFormElement);\r\n    await axios.post(\"https://tabmerger-backend.herokuapp.com/contact\", [...formData]);\r\n    resetBtn.current?.click();\r\n    setSent(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" id=\"contact-section\">\r\n      <h2 className=\"font-weight-bolder pt-3 text-center\">\r\n        Questions{\" \"}\r\n        <span role=\"img\" aria-label=\"person raising up their hand to ask a question\">\r\n          🙋‍♂️\r\n        </span>\r\n      </h2>\r\n\r\n      <Form className=\"contactForm\" onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"formFirstName\">\r\n          <Form.Label>\r\n            Name<span className=\"required\">*</span>\r\n          </Form.Label>\r\n          <Form.Control\r\n            className=\"input-field\"\r\n            name=\"firstname\"\r\n            type=\"text\"\r\n            placeholder=\"John Doe\"\r\n            required\r\n            onFocus={() => setSent(false)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formEmail\">\r\n          <Form.Label>\r\n            Email<span className=\"required\">*</span>\r\n          </Form.Label>\r\n          <Form.Control\r\n            className=\"input-field\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={email}\r\n            placeholder=\"example@email.com\"\r\n            required\r\n            onFocus={() => setSent(false)}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            Your email will not be shared with anyone else{\" \"}\r\n            <span role=\"img\" aria-label=\"image of a security lock\">\r\n              🔐\r\n            </span>\r\n            .\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formSubject\">\r\n          <Form.Label>\r\n            Subject<span className=\"required\">*</span>\r\n          </Form.Label>\r\n          <Form.Control\r\n            className=\"input-field\"\r\n            name=\"subject\"\r\n            type=\"text\"\r\n            placeholder=\"Let's Connect!\"\r\n            required\r\n            onFocus={() => setSent(false)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formPhone\">\r\n          <Form.Label>Phone Number</Form.Label>\r\n          <Form.Control\r\n            className=\"input-field\"\r\n            name=\"phone\"\r\n            type=\"tel\"\r\n            pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n            placeholder=\"(012) 345-6789\"\r\n            onFocus={() => setSent(false)}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            Your number will not be shared with anyone else{\" \"}\r\n            <span role=\"img\" aria-label=\"image of a phone\">\r\n              ☎\r\n            </span>\r\n            .\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formTextArea\">\r\n          <Form.Label>\r\n            Message<span className=\"required\">*</span>\r\n          </Form.Label>\r\n          <Form.Control\r\n            name=\"message\"\r\n            as=\"textarea\"\r\n            rows={10}\r\n            cols={30}\r\n            placeholder=\"If you would like to connect, please share your social media and/or website here...\"\r\n            required\r\n            onFocus={() => setSent(false)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formCheckbox\">\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label={[\r\n              \"I am not a robot\",\r\n              <span key={1} className=\"required\">\r\n                *\r\n              </span>,\r\n            ]}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <div className=\"form-buttons pb-3\">\r\n          <Button type=\"submit\" variant={sent ? \"success\" : \"primary\"}>\r\n            {sent ? \"Sent\" : \"Send\"}\r\n          </Button>\r\n          <Button ref={resetBtn} type=\"reset\" variant=\"secondary\" id=\"resetButton\">\r\n            Clear\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FaArrowUp } from \"react-icons/fa\";\r\nimport \"./Footer.css\";\r\n\r\nexport default function Footer(): JSX.Element {\r\n  return (\r\n    <>\r\n      <section className=\"footer\">\r\n        <div className=\"container py-2 px-0 text-white\">\r\n          <span className=\"copyright\">Copyright &copy; {new Date().getFullYear()} Lior Bragilevsky </span>\r\n          <div className=\"d-inline-block float-right\">\r\n            <a href=\"#landingpage-section\" className=\"no-underline\">\r\n              TOP\r\n              <FaArrowUp className=\"up-arrow ml-1\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./Dark.css\";\r\n\r\nexport default function Dark(): JSX.Element {\r\n  const [dark, setDark] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    (document.querySelector(\".custom-control-input\") as HTMLInputElement).checked = dark;\r\n\r\n    document.body.style.color = dark ? \"white\" : \"black\";\r\n    document.body.style.background = dark ? \"rgb(29, 31, 33)\" : \"#efefef\";\r\n\r\n    // portrait image\r\n    (document.getElementById(\"portrait\") as HTMLImageElement).style.border =\r\n      \"3px solid \" + (dark ? \"white\" : \"#121212\");\r\n\r\n    // cards\r\n    document.querySelectorAll(\".card\").forEach((x) => {\r\n      (x as HTMLDivElement).style.background = dark ? \"white\" : \"rgb(29, 31, 33)\";\r\n      (x as HTMLDivElement).style.color = dark ? \"black\" : \"white\";\r\n    });\r\n\r\n    document.querySelectorAll(\".card-header, .card-footer\").forEach((x) => {\r\n      (x as HTMLDivElement).style.background = dark ? \"#efefef\" : \"#101010\";\r\n    });\r\n\r\n    // social media buttons\r\n    document.querySelectorAll(\".btn-light\").forEach((x) => {\r\n      (x as HTMLDivElement).style.background = dark ? \"#efefef\" : \"#676767\";\r\n    });\r\n\r\n    document.querySelectorAll(\".btn-light svg\").forEach((x) => {\r\n      (x as HTMLDivElement).style.color = dark ? \"black\" : \"white\";\r\n    });\r\n\r\n    // double arrow\r\n    (document.querySelector(\".scroll-down-hint\") as HTMLSpanElement).style.color = dark ? \"white\" : \"black\";\r\n\r\n    // footer\r\n    document.querySelectorAll(\".copyright, .no-underline\").forEach((x) => {\r\n      (x as HTMLDivElement).style.color = dark ? \"white\" : \"black\";\r\n    });\r\n  }, [dark]);\r\n\r\n  return (\r\n    <div className=\"custom-control custom-switch\">\r\n      <input type=\"checkbox\" className=\"custom-control-input\" id=\"darkMode\" onChange={() => setDark(!dark)} />\r\n      <label className=\"custom-control-label\" htmlFor=\"darkMode\">\r\n        <span role=\"img\" aria-label=\"light|dark indicating theme\">\r\n          🌗\r\n        </span>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap/dist/js/bootstrap.js\";\r\n\r\nimport React from \"react\";\r\n\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport LandingPage from \"../LandingPage/LandingPage\";\r\nimport Project from \"../Project/Project\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Dark from \"../Dark/Dark\";\r\n\r\nimport ProjectText, { IProject } from \"../misc/ProjectText\";\r\nimport \"./App.css\";\r\n\r\nexport default function App(): JSX.Element {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar />\r\n      <LandingPage />\r\n      <Dark />\r\n\r\n      <section className=\"projects anchor\" id=\"project-section\">\r\n        <h2 className=\"text-center\">\r\n          Projects{\" \"}\r\n          <span role=\"img\" aria-label=\"projects are for strong minded people\">\r\n            💪\r\n          </span>\r\n        </h2>\r\n        {ProjectText.map((x: IProject) => {\r\n          return (\r\n            <Project\r\n              name={x.name}\r\n              src={x.src}\r\n              youtube={x.youtube}\r\n              alt={x.alt}\r\n              description={x.description}\r\n              implementation={x.implementation}\r\n              github={x.github}\r\n              docs={x.docs}\r\n              website={x.website}\r\n              key={Math.random()}\r\n            />\r\n          );\r\n        })}\r\n      </section>\r\n\r\n      <ContactForm />\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}